198. House Robber I



class Solution {
public:
   ** Top_Down**

    // int dp[101];
    // int solve(vector<int>&vec, int i, int n){
    //     if(i>=n) return 0;
    //     if(dp[i]!=-1) return dp[i];
    //     int steal=vec[i]+solve(vec,i+2,n);
    //     int leave=solve(vec,i+1,n);
    //     return dp[i]=max(steal,leave);
    // }


    int rob(vector<int>& nums) {
        // int n=nums.size();
        // memset(dp,-1,sizeof(dp));
        // return solve(nums,0,n);

    
   **Bottom_up**
int rob(vector<int>& nums) {
        

    int n=nums.size();
    vector<int>dp(n+1,0);
     dp[0]=0;
    dp[1]=nums[0];
    for(int i=2;i<=n;i++){
        int steal=nums[i-1]+dp[i-2];
        int skip=dp[i-1];
        dp[i]=max(steal,skip);
    }
    return dp[n];
    }
};